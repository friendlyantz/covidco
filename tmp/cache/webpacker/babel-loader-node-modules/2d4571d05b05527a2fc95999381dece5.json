{"ast":null,"code":"import mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\n\nvar buildMap = function buildMap(mapElement) {\n  mapboxgl.accessToken = mapElement.dataset.mapboxApiKey;\n  return new mapboxgl.Map({\n    container: 'map',\n    // STYLES\n    // DEFAULT STYLE\n    style: 'mapbox://styles/mapbox/streets-v11' // GREY STYLE\n    // style: 'mapbox://styles/pdunleav/cjofefl7u3j3e2sp0ylex3cyb'\n    // OIL COMPANY\n    // style: 'mapbox://styles/trueyakuza/ckiggob2c5kgv19o5q5ld75zk'\n    // BLUEPRINT\n    // style: 'mapbox://styles/trueyakuza/ckiggm1oc5khu19msroauy2pr'\n\n  }); //   const map = new mapboxgl.Map({\n  //   container: 'map',\n  //   style: 'mapbox://styles/pdunleav/cjofefl7u3j3e2sp0ylex3cyb' // <-- use your own!\n  // });\n};\n\nvar addMarkersToMap = function addMarkersToMap(map, markers) {\n  // DEFAUL MARKER\n  // markers.forEach((marker) => {\n  //   const popup = new mapboxgl.Popup().setHTML(marker.infoWindow); \n  // new mapboxgl.Marker()\n  //   .setLngLat([ marker.lng, marker.lat ])\n  //   .setPopup(popup)\n  //   .addTo(map);\n  // });\n  // CUSTOM MARKERS \n  markers.forEach(function (marker) {\n    var popup = new mapboxgl.Popup().setHTML(marker.infoWindow); // Create a HTML element for your custom marker\n\n    var element = document.createElement('div');\n    element.className = 'marker';\n    element.style.backgroundImage = \"url('\".concat(marker.image_url, \"')\");\n    element.style.backgroundSize = 'contain';\n    element.style.width = '50px';\n    element.style.height = '50px'; // Pass the element as an argument to the new marker\n\n    new mapboxgl.Marker({\n      element: element\n    }).setLngLat([marker.lng, marker.lat]).setPopup(popup).addTo(map);\n  });\n};\n\nvar fitMapToMarkers = function fitMapToMarkers(map, markers) {\n  var bounds = new mapboxgl.LngLatBounds();\n  markers.forEach(function (marker) {\n    return bounds.extend([marker.lng, marker.lat]);\n  });\n  map.fitBounds(bounds, {\n    padding: 10,\n    maxZoom: 15,\n    animate: false\n  });\n};\n\nvar initMapbox = function initMapbox() {\n  var mapElement = document.getElementById('map');\n\n  if (mapElement) {\n    var map = buildMap(mapElement);\n    var markers = JSON.parse(mapElement.dataset.markers);\n    addMarkersToMap(map, markers);\n    console.log(markers); // MAPBOX DEBUGGER\n    // setTimeout(function() {  \n    // }, 500)\n    // fit to marker AFTER mapload\n\n    map.on('load', function () {\n      fitMapToMarkers(map, markers);\n    }); // map.addControl(new MapboxGeocoder({ accessToken: mapboxgl.accessToken,\n    //                                     mapboxgl: mapboxgl }));\n  }\n};\n\nexport { initMapbox };","map":{"version":3,"sources":["/home/anton/code/friendlyantz/covidco/app/javascript/plugins/init_mapbox.js"],"names":["mapboxgl","MapboxGeocoder","buildMap","mapElement","accessToken","dataset","mapboxApiKey","Map","container","style","addMarkersToMap","map","markers","forEach","marker","popup","Popup","setHTML","infoWindow","element","document","createElement","className","backgroundImage","image_url","backgroundSize","width","height","Marker","setLngLat","lng","lat","setPopup","addTo","fitMapToMarkers","bounds","LngLatBounds","extend","fitBounds","padding","maxZoom","animate","initMapbox","getElementById","JSON","parse","console","log","on"],"mappings":"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","sourcesContent":["import mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\n\nconst buildMap = (mapElement) => {\n  mapboxgl.accessToken = mapElement.dataset.mapboxApiKey;\n  return new mapboxgl.Map({\n    container: 'map',\n    // STYLES\n      // DEFAULT STYLE\n      style: 'mapbox://styles/mapbox/streets-v11'\n      // GREY STYLE\n      // style: 'mapbox://styles/pdunleav/cjofefl7u3j3e2sp0ylex3cyb'\n      // OIL COMPANY\n      // style: 'mapbox://styles/trueyakuza/ckiggob2c5kgv19o5q5ld75zk'\n      // BLUEPRINT\n      // style: 'mapbox://styles/trueyakuza/ckiggm1oc5khu19msroauy2pr'\n\n  });\n  //   const map = new mapboxgl.Map({\n  //   container: 'map',\n  //   style: 'mapbox://styles/pdunleav/cjofefl7u3j3e2sp0ylex3cyb' // <-- use your own!\n  // });\n\n};\n\nconst addMarkersToMap = (map, markers) => {\n  \n  // DEFAUL MARKER\n    // markers.forEach((marker) => {\n    //   const popup = new mapboxgl.Popup().setHTML(marker.infoWindow); \n    // new mapboxgl.Marker()\n    //   .setLngLat([ marker.lng, marker.lat ])\n    //   .setPopup(popup)\n    //   .addTo(map);\n  // });\n\n       // CUSTOM MARKERS \n    markers.forEach((marker) => {\n      const popup = new mapboxgl.Popup().setHTML(marker.infoWindow);\n      // Create a HTML element for your custom marker\n      const element = document.createElement('div');\n      element.className = 'marker';\n      element.style.backgroundImage = `url('${marker.image_url}')`;\n      element.style.backgroundSize = 'contain';\n      element.style.width = '50px';\n      element.style.height = '50px';\n      // Pass the element as an argument to the new marker\n      new mapboxgl.Marker({\n      element\n    })\n        .setLngLat([marker.lng, marker.lat])\n        .setPopup(popup)\n        .addTo(map);\n  });\n};\n\nconst fitMapToMarkers = (map, markers) => {\n  const bounds = new mapboxgl.LngLatBounds();\n  markers.forEach(marker => bounds.extend([ marker.lng, marker.lat ]));\n  map.fitBounds(bounds, { padding: 10, maxZoom: 15,\n  animate: false\n });\n};\n\n\n\n\nconst initMapbox = () => {\n  const mapElement = document.getElementById('map');\n  if (mapElement) {\n    const map = buildMap(mapElement);\n\n    const markers = JSON.parse(mapElement.dataset.markers);\n    addMarkersToMap(map, markers);\n\n    \n    console.log(markers)\n    // MAPBOX DEBUGGER\n    // setTimeout(function() {  \n      // }, 500)\n      \n      // fit to marker AFTER mapload\n      map.on('load', function () {\n        fitMapToMarkers(map, markers);\n    });   \n\n    // map.addControl(new MapboxGeocoder({ accessToken: mapboxgl.accessToken,\n    //                                     mapboxgl: mapboxgl }));\n\n\n  }\n};\n\nexport { initMapbox };"]},"metadata":{},"sourceType":"module"}